{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different sizes, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where matrixA must to be of size n*m & matrixB of size m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}

() recv_internal() {
}

(int) tlen (tuple t) asm "TLEN";
forall X -> int is_null (X x) asm "ISNULL";
forall X -> (tuple, ()) push_back(tuple tail, X head) asm "CONS";
forall X -> (tuple, (X)) pop_back(tuple t) asm "UNCONS";

;; testable
(tuple) matrix_multiplier(tuple matrixA, tuple matrixB) method_id {
	tuple matrixC = empty_tuple();
	int mlen = tlen(matrixA);
	int x = 0;

	while (x < mlen) {
		int y = 0;
		while (y < mlen) {
			int sum = 0;
			int k = 0;

			while (k < mlen) {
				sum += matrixA.at(x).at(y) * matrixB.at(y).at(k);
				k += 1;
			}

			matrixC.at(i).at(y) = sum;
			y += 1;
		}

		x += 1;
	}

	return matrixC;
}